- pipeline: "Odds"
  on: "CLICK"
  refs:
  - "refs/heads/main"
  - "refs/heads/pre-production"
  fail_on_prepare_env_warning: true
  actions:
  - action: "        print(f'Failed to deploy data: {deploy_response.text}')"
    type: "BUILD"
    docker_image_name: "library/python"
    docker_image_tag: "3.9"
    execute_commands:
    - "pip install -r requirements.txt"
    - "nosetests"
    - ""
    - "import os"
    - "import requests"
    - ""
    - "# Fetch environment variables from Buddy"
    - "ODDS_API = os.getenv('odds_api')"
    - "ODDS_API_KEY = os.getenv('odds_api_key')"
    - "SPORT = 'upcoming'"
    - "REGIONS = 'us'"
    - "MARKETS = 'h2h,spreads'"
    - "ODDS_FORMAT = 'decimal'"
    - "DATE_FORMAT = 'iso'"
    - ""
    - "# Fetch list of in-season sports"
    - "sports_response = requests.get("
    - "    ODDS_API,"
    - "    params={'api_key': ODDS_API_KEY}"
    - ")"
    - ""
    - "if sports_response.status_code != 200:"
    - "    print(f'Failed to get sports: status_code {sports_response.status_code}, response body {sports_response.text}')"
    - "else:"
    - "    print('List of in season sports:', sports_response.json())"
    - ""
    - "# Construct URL to fetch odds"
    - "url = f\"{ODDS_API}{SPORT}/odds\""
    - ""
    - "# Fetch odds data"
    - "odds_response = requests.get("
    - "    url,"
    - "    params={"
    - "        'api_key': ODDS_API_KEY,"
    - "        'regions': REGIONS,"
    - "        'markets': MARKETS,"
    - "        'oddsFormat': ODDS_FORMAT,"
    - "        'dateFormat': DATE_FORMAT,"
    - "    }"
    - ")"
    - ""
    - "if odds_response.status_code != 200:"
    - "    print(f'Failed to get odds: status_code {odds_response.status_code}, response body {odds_response.text}')"
    - "else:"
    - "    odds_json = odds_response.json()"
    - "    print('Number of events:', len(odds_json))"
    - "    print(odds_json)"
    - "    print('Remaining requests', odds_response.headers['x-requests-remaining'])"
    - "    print('Used requests', odds_response.headers['x-requests-used'])"
    - ""
    - "    # Example: Deploy data to a Netlify function endpoint"
    - "    netlify_function_url = 'https://api.netlify.com/api/v1/sites/{site_id}/functions/{function_name}'"
    - "    headers = {"
    - "        'Authorization': f'Bearer {NETLIFY_ACCESS_TOKEN}',"
    - "        'Content-Type': 'application/json',"
    - "    }"
    - ""
    - "    deploy_response = requests.post("
    - "        netlify_function_url,"
    - "        headers=headers,"
    - "        json=odds_json  # Assuming odds_json is the data you want to deploy"
    - "    )"
    - ""
    - "    if deploy_response.status_code == 200:"
    - "        print('Data deployed successfully to Netlify function')"
    - "    else:"
    - "        print(f'Failed to deploy data: {deploy_response.text}')"
    cached_dirs:
    - "/root/.cache/pip"
    shell: "BASH"
